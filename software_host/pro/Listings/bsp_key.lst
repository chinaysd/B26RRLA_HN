C51 COMPILER V9.59.0.0   BSP_KEY                                                           06/18/2019 20:14:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BSP_KEY
OBJECT MODULE PLACED IN .\Objects\bsp_key.obj
COMPILER INVOKED BY: E:\MDK\C51\BIN\C51.EXE ..\bsp\bsp_key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\bsp;..\lib;..\TimeOut;..
                    -\user) DEBUG OBJECTEXTEND PRINT(.\Listings\bsp_key.lst) TABS(7) OBJECT(.\Objects\bsp_key.obj)

line level    source

   1          #include "bsp_key.h"
   2          
   3          
   4          extern LOCK_PARA_t Lock_Para_t;
   5          
   6          char TX0SendData,TX1SendData;
   7          unsigned long int MyKeyValue,KEYTempVALUE;
   8          TIMEOUT_PARA TimeOut_Para[2];
   9          
  10          extern char count_level;
  11          
  12          char FootLedTempCnts,FoolLedFlag;
  13          
  14          void RevDataFootLedOpen(void)
  15          {
  16   1             if(count_level == 15){
  17   2            KEYTempVALUE = NON_VALUE;
  18   2               TX0SendData = LedOpenData;       //往下发的指令
  19   2               TX1SendData = ExtiLedOpenData;
  20   2               FoolLedFlag = 1;
  21   2            count_level = 100;
  22   2             }
  23   1      }
  24          
  25          void RevDataFootLedClose(void)
  26          {
  27   1             if(count_level == 100){
  28   2             KEYTempVALUE = NON_VALUE;
  29   2                TX0SendData = LedCloseData;     //往下发的指令
  30   2                TX1SendData = ExtiLedCloseData;
  31   2                FoolLedFlag = 1;
  32   2                count_level = 15;
  33   2             }
  34   1      }
  35          
  36          void KeyDataOnLineSend(void)
  37          {
  38   1             if(TimeOutDet_Check(&TimeOut_Para[0]))
  39   1             {
  40   2                    TimeOut_Record(&TimeOut_Para[0],OneLineTime);
  41   2                    Uart0_ProtocolSend(0xfa,0xfb,TX0SendData);       
  42   2                    Uart1_ProtocolSendData(0xfa,0xfb,TX1SendData);
  43   2             }
  44   1      }
  45          
  46          void Key_Handle(void)
  47          {
  48   1             if(SOCAPI_TouchKeyStatus&0x80) 
  49   1             {
  50   2                    SOCAPI_TouchKeyStatus &= 0x7f;
  51   2                    MyKeyValue = TouchKeyScan();
  52   2                    switch (MyKeyValue)
  53   2                    {
  54   3                           case TK1_VALUE:
C51 COMPILER V9.59.0.0   BSP_KEY                                                           06/18/2019 20:14:35 PAGE 2   

  55   3                                  if((KEYTempVALUE != TK1_VALUE)&&(Lock_Para_t.LockFlag)){
  56   4                        KEYTempVALUE = TK1_VALUE;
  57   4                                    FoolLedFlag = 1;
  58   4                                    ++ FootLedTempCnts;
  59   4                                    if(FootLedTempCnts & 0x01){
  60   5                                         if(15 == count_level){
  61   6                             TX0SendData = LedOpenData;
  62   6                                            TX1SendData = ExtiLedOpenData;
  63   6                                            count_level = 100;
  64   6                                         }
  65   5                                    }
  66   4                                    else{
  67   5                                         if(100 == count_level){
  68   6                             TX0SendData = LedCloseData;
  69   6                                            TX1SendData = ExtiLedCloseData;
  70   6                                            count_level = 15;
  71   6                                         }
  72   5                                    }
  73   4                                  }
  74   3                                  
  75   3                                  break;
  76   3                           case TK2_VALUE:
  77   3                                  if((KEYTempVALUE != TK2_VALUE)&&(Lock_Para_t.LockFlag)){
  78   4                        KEYTempVALUE = TK2_VALUE;
  79   4                                    CupHandle();
  80   4                                  }
  81   3                                  break;
  82   3                           case TK3_VALUE:
  83   3                                  if((KEYTempVALUE != TK3_VALUE)&&(Lock_Para_t.LockFlag)){
  84   4                                    KEYTempVALUE = TK3_VALUE;
  85   4                                    TX0SendData = HeadUpData;
  86   4                                    FoolLedFlag = 0;
  87   4                                  }
  88   3                                  break;
  89   3                           case TK4_VALUE:
  90   3                                  if((KEYTempVALUE != TK4_VALUE)&&(Lock_Para_t.LockFlag)){
  91   4                                    KEYTempVALUE = TK4_VALUE;
  92   4                                    TX0SendData = HomeData;
  93   4                                    FoolLedFlag = 0;
  94   4                                  }
  95   3                                  break;
  96   3                           case TK5_VALUE:
  97   3                                  if(KEYTempVALUE != TK5_VALUE){
  98   4                                    KEYTempVALUE = TK5_VALUE;
  99   4                                    //TX0SendData = 0x10;
 100   4                                  }
 101   3                                  break;
 102   3                           case TK6_VALUE:
 103   3                                  if((KEYTempVALUE != TK6_VALUE)&&(Lock_Para_t.LockFlag)){
 104   4                                    KEYTempVALUE = TK6_VALUE;
 105   4                                    TX0SendData = OpenData;
 106   4                                    FoolLedFlag = 0;
 107   4                                  }
 108   3                                  break;
 109   3                           case TK7_VALUE:
 110   3                                  if((KEYTempVALUE != TK7_VALUE)&&(Lock_Para_t.LockFlag)){
 111   4                                    KEYTempVALUE = TK7_VALUE;
 112   4                                    TX0SendData = CloseData;
 113   4                                    FoolLedFlag = 0;
 114   4                                  }
 115   3                                  break;
 116   3                           case TK8_VALUE:
C51 COMPILER V9.59.0.0   BSP_KEY                                                           06/18/2019 20:14:35 PAGE 3   

 117   3                                  if((KEYTempVALUE != TK8_VALUE)&&(Lock_Para_t.LockFlag)){
 118   4                                    KEYTempVALUE = TK8_VALUE;
 119   4                                    TX0SendData = HeadDownData;
 120   4                                    FoolLedFlag = 0;
 121   4                                  }
 122   3                                  break;
 123   3                                  #if 0
                                   case 0X0100:
                                          break;
                                   case 0X0200:
                                          break;
                                          #endif
 129   3                           default:
 130   3                                  if(KEYTempVALUE != NON_VALUE){
 131   4                                    KEYTempVALUE = NON_VALUE;
 132   4                                    if(!FoolLedFlag){
 133   5                           TX0SendData = NoData;
 134   5                                    }
 135   4                                  }
 136   3                                  break;
 137   3                    }
 138   2                    TouchKeyRestart();// 启动下一轮转换
 139   2             }
 140   1             if(KEYTempVALUE == NON_VALUE){
 141   2             RevDataHandle();
 142   2             }
 143   1             KeyDataOnLineSend();
 144   1      }
 145          
 146          
 147          
 148          
 149          
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
